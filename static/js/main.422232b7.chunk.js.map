{"version":3,"sources":["components/button/Button.js","components/greeting/Clock.js","components/greeting/Greeting.js","components/blog/Blog.js","components/bio/Bio.js","components/projects/Corona.js","components/projects/Projects.js","components/about/About.js","components/nav-bar/SocialWidget.js","components/nav-bar/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["Button","props","state","isToggleOn","handleClick","bind","this","setState","document","getElementById","innerText","style","background","className","id","onClick","Component","Clock","date","Date","timerID","setInterval","tick","clearInterval","toLocaleTimeString","Greeting","Blog","Bio","Corona","areas","axios","get","then","res","console","log","data","cases","Object","getOwnPropertyNames","map","area","deaths","recovered","areaList","sample","key","Projects","About","SocialWidget","e","window","open","NavBar","to","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"0aAkCeA,G,kBA9BX,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAQ,CAACC,YAAY,GAE1B,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAJL,E,2EAQdC,KAAKC,SAAS,CACVJ,YAAaG,KAAKJ,MAAMC,aAExBG,KAAKJ,MAAMC,YACXK,SAASC,eAAe,UAAUC,UAAY,KAC9CF,SAASC,eAAe,UAAUE,MAAMC,WAAa,YAGrDJ,SAASC,eAAe,UAAUC,UAAY,KAC9CF,SAASC,eAAe,UAAUE,MAAMC,WAAa,a,+BAKzD,OACI,yBAAKC,UAAU,kBACX,4BAAQC,GAAG,SAASC,QAAST,KAAKF,aAAlC,W,GAzBKY,cCiCNC,G,kBAhCX,WAAYhB,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAQ,CAACgB,KAAO,IAAIC,MAFX,E,iFAKE,IAAD,OACfb,KAAKc,QAAUC,aACX,WACI,EAAKC,SAET,O,6CAIJC,cAAcjB,KAAKc,W,6BAInBd,KAAKC,SAAS,CACVW,KAAM,IAAIC,S,+BAKd,OACI,yBAAKN,UAAU,SACX,2BAAIP,KAAKJ,MAAMgB,KAAKM,2B,GA3BhBR,c,MCkBLS,MAjBf,WACI,OACI,yBAAKZ,UAAU,YACX,wBAAIA,UAAU,gBACV,8BACI,0BAAMA,UAAU,SAAhB,OACA,0BAAMA,UAAU,SAAhB,UACA,0BAAMA,UAAU,SAAhB,SAGR,+DACA,0EACA,kBAAC,EAAD,QCNGa,MARf,WACI,OACI,yBAAKb,UAAU,QACX,yCCKGc,MARf,WACI,OACI,yBAAKd,UAAU,OACX,uC,yBCoDGe,E,2MApDX1B,MAAQ,CACJ2B,MAAQ,I,mFAGS,IAAD,OAChBC,IAAMC,IACF,uFACA,CACI,OAAU,MAEjBC,MAAK,SAAAC,GACFC,QAAQC,IAAIF,EAAIG,KAAKA,KAAT,OAAwBC,OACpC,EAAK9B,SAAS,CACVsB,MAAOS,OAAOC,oBAAoBN,EAAIG,KAAKA,MAClCI,KAAI,SAAAC,GACD,MACI,CACIA,KAAMA,EACNJ,MAAOJ,EAAIG,KAAKA,KAAKK,GAAMJ,MAC3BK,OAAQT,EAAIG,KAAKA,KAAKK,GAAMC,OAC5BC,UAAWV,EAAIG,KAAKA,KAAKK,GAAME,qB,+BAStD,IAECC,EADYtC,KAAKJ,MAAf2B,MACeW,KAAI,SAAAK,GAEvB,OADAX,QAAQC,IAAIU,GAER,yBAAKhC,UAAU,SAASiC,IAAKD,EAAOJ,MAChC,oCAAUI,EAAOJ,MACjB,qCAAWI,EAAOR,OAClB,sCAAYQ,EAAOH,QACnB,yCAAeG,EAAOF,WACtB,iCAIZ,OACI,yBAAK9B,UAAU,UACX,qCACC+B,O,GA/CI5B,aCUN+B,E,iLARP,OACI,yBAAKlC,UAAU,YACX,kBAAC,EAAD,W,GAJOG,aCMRgC,MARf,WACI,OACI,yBAAKnC,UAAU,SACX,yCCsBGoC,G,6LAVP,OACI,yBAAKpC,UAAU,iBACX,yBAAKC,GAAG,UAAUC,QAN1B,SAAuBmC,GAEnBC,OAAOC,KAAK,gDAKR,yBAAKtC,GAAG,SAASC,QAXzB,SAAsBmC,GAElBC,OAAOC,KAAK,sCAUR,yBAAKtC,GAAG,KAAKC,QAhBrB,SAAkBmC,GAEdC,OAAOC,KAAK,iD,GAJGpC,cCyBZqC,MAvBf,WACI,OACI,yBAAKxC,UAAU,WACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,aACX,kBAAC,IAAD,CAAMC,GAAG,QAAQwC,GAAG,cAApB,WAEJ,kBAAC,EAAD,OAEJ,yBAAKzC,UAAU,aACX,yBAAKA,UAAU,iBACX,wBAAIC,GAAG,YACH,wBAAID,UAAU,aAAY,kBAAC,IAAD,CAAMyC,GAAG,mBAAT,SAC1B,wBAAIzC,UAAU,aAAY,kBAAC,IAAD,CAAMyC,GAAG,uBAAT,aAC1B,wBAAIzC,UAAU,aAAY,kBAAC,IAAD,CAAMyC,GAAG,kBAAT,QAC1B,wBAAIzC,UAAU,aAAY,kBAAC,IAAD,CAAMyC,GAAG,oBAAT,eCOnCC,MAhBf,WACE,OACE,kBAAC,IAAD,KACE,yBAAK1C,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAO2C,OAAK,EAACC,KAAK,aAAaC,UAAWjC,IAC1C,kBAAC,IAAD,CAAO+B,OAAK,EAACC,KAAK,kBAAkBC,UAAWhC,IAC/C,kBAAC,IAAD,CAAO8B,OAAK,EAACC,KAAK,mBAAmBC,UAAWV,IAChD,kBAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,sBAAsBC,UAAWX,IACnD,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,iBAAiBC,UAAW/B,IAC9C,kBAAC,EAAD,SCTYgC,QACW,cAA7BR,OAAOS,SAASC,UAEe,UAA7BV,OAAOS,SAASC,UAEhBV,OAAOS,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASxD,SAASC,eAAe,SD6H3C,kBAAmBwD,WACrBA,UAAUC,cAAcC,MACrBnC,MAAK,SAAAoC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLrC,QAAQqC,MAAMA,EAAMC,c","file":"static/js/main.422232b7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Button.css';\n\nclass Button extends Component {\n    constructor(props){\n        super(props);\n        this.state = {isToggleOn: false};\n        // This binding is necessary to make `this` work in the callback\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(){\n        this.setState({\n            isToggleOn: !this.state.isToggleOn\n        });\n        if (this.state.isToggleOn){\n            document.getElementById('button').innerText = ':)';\n            document.getElementById('button').style.background = '#542bff';\n        }\n        else {\n            document.getElementById('button').innerText = ':(';\n            document.getElementById('button').style.background = '#fabc30';\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"flex-container\">\n                <button id=\"button\" onClick={this.handleClick} >:)</button>\n            </div>\n        );\n    }\n}\n\nexport default Button;","import React, {Component} from 'react';\nimport './Clock.css';\n\nclass Clock extends Component {\n    constructor(props){\n        super(props);\n        this.state = {date : new Date()};\n    }\n\n    componentDidMount(){\n        this.timerID = setInterval(\n            () => {\n                this.tick();\n            },\n            1000\n        );\n    }\n    componentWillUnmount(){\n        clearInterval(this.timerID);\n    }\n\n    tick(){\n        this.setState({\n            date: new Date()\n        });\n    }\n\n    render() {\n        return(\n            <div className=\"clock\">\n                <p>{this.state.date.toLocaleTimeString()}</p>\n            </div>\n        );\n    }\n}\n\nexport default Clock;","import React from 'react';\nimport Clock from './Clock';\nimport './Greeting.css';\n\nfunction Greeting() {\n    return (\n        <div className=\"greeting\">\n            <h1 className=\"titleWrapper\">\n                <span>\n                    <span className=\"title\">Hi </span>\n                    <span className=\"title\">there </span>\n                    <span className=\"title\">...</span>\n                </span>\n            </h1>\n            <p>I AM A SELF-TAUGHT WEB DEVELOPER</p>\n            <p>A SYSTEM ADMINISTRATOR, AND A SCIENCE LOVER</p>\n            <Clock />\n        </div>\n    );\n}\n\nexport default Greeting;","import React from 'react';\n\nfunction Blog() {\n    return (\n        <div className=\"blog\">\n            <p>My Posts</p>\n        </div>\n    );\n}\n\nexport default Blog;","import React from 'react';\n\nfunction Bio() {\n    return (\n        <div className=\"bio\">\n            <p>My Bio</p>\n        </div>\n    );\n}\n\nexport default Bio;","import React, {Component} from 'react';\nimport axios from 'axios';\n\n\nclass Corona extends Component {\n    state = {\n        areas : []\n    }\n\n    componentDidMount() {\n        axios.get(\n            'https://cors-anywhere.herokuapp.com/https://code.junookyo.xyz/api/ncov-moh/data.json',\n            {\n                'origin': '*'\n            }) //get data asynchronously\n        .then(res => {\n            console.log(res.data.data[\"global\"].cases);\n            this.setState({\n                areas: Object.getOwnPropertyNames(res.data.data)  // [\"global\", \"vietname\"]\n                        .map(area => {\n                            return(\n                                {\n                                    area: area,\n                                    cases: res.data.data[area].cases,\n                                    deaths: res.data.data[area].deaths,\n                                    recovered: res.data.data[area].recovered\n                                }\n                            )\n                        })\n            });\n        })\n        \n    }\n    \n    render(){\n        const { areas } = this.state;\n        const areaList = areas.map(sample => {\n            console.log(sample);\n            return(\n                <div className=\"sample\" key={sample.area}>\n                    <p>Area: {sample.area}</p>\n                    <p>Cases: {sample.cases}</p>\n                    <p>Deaths: {sample.deaths}</p>\n                    <p>Recovered: {sample.recovered}</p>\n                    <br></br>\n                </div>\n            )            \n        })\n        return (\n            <div className=\"corona\">\n                <p>Corona</p>\n                {areaList}\n            </div>\n        );\n    }\n}\n\nexport default Corona;","import React, {Component} from 'react';\nimport './Projects.css';\nimport Corona from './Corona';\n\nclass Projects extends Component {\n    render(){\n        return (\n            <div className=\"projects\">\n                <Corona />\n            </div>\n        );\n    }    \n}\n\nexport default Projects;","import React from 'react';\n\nfunction About() {\n    return (\n        <div className=\"about\">\n            <p>About me</p>\n        </div>\n    );\n}\n\nexport default About;","import React, {Component} from 'react';\nimport './SocialWidget.css';\n\nclass SocialWidget extends Component {\n    render(){\n        function handleFb(e) {\n            // Open new tab to my facebook profile\n            window.open(\"https://www.facebook.com/vungocson998\");\n        };\n        function handleGithub(e) {\n            // Open new tab to my github profile\n            window.open(\"https://github.com/vungocson998\");\n        };\n        function handleLinkein(e) {\n            // Open new tab to my linkein profile\n            window.open(\"https://www.linkedin.com/in/vungocson998/\");\n        };\n        return (\n            <div className=\"social-widget\">\n                <div id=\"linkein\" onClick={handleLinkein}></div>\n                <div id=\"github\" onClick={handleGithub}></div>\n                <div id=\"fb\" onClick={handleFb}></div>                    \n            </div>\n        );\n    }    \n}\n\nexport default SocialWidget;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './NavBar.css';\nimport SocialWidget from './SocialWidget';\n\nfunction NavBar() {\n    return (\n        <div className=\"nav-bar\">\n            <div className=\"header-bar\">\n                <div className=\"site-logo\">\n                    <Link id=\"title\" to=\"/portfolio\">SON VU</Link>\n                </div>\n                <SocialWidget/>\n            </div>\n            <div className=\"main-menu\">\n                <nav className=\"main-nav-wrap\">\n                    <ul id=\"main-nav\">\n                        <li className=\"menu-item\"><Link to=\"/portfolio/blog\">BLOG</Link></li>\n                        <li className=\"menu-item\"><Link to=\"/portfolio/projects\">PROJECTS</Link></li>\n                        <li className=\"menu-item\"><Link to=\"/portfolio/bio\">BIO</Link></li>\n                        <li className=\"menu-item\"><Link to=\"/portfolio/about\">ABOUT</Link></li>\n                    </ul>\n                </nav>\n            </div>\n        </div>\n    );\n}\n\nexport default NavBar","import React from 'react';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport './App.css';\nimport Button from './components/button/Button';\nimport Greeting from './components/greeting/Greeting';\nimport Blog from './components/blog/Blog';\nimport Bio from './components/bio/Bio';\nimport Projects from './components/projects/Projects';\nimport About from './components/about/About';\nimport NavBar from './components/nav-bar/NavBar';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <NavBar/>\n        <Route exact path='/portfolio' component={Greeting}/>\n        <Route exact path='/portfolio/blog' component={Blog}/>\n        <Route exact path='/portfolio/about' component={About}/>\n        <Route exact path='/portfolio/projects' component={Projects}/>\n        <Route exact path='/portfolio/bio' component={Bio}/>\n        <Button/>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}